package com.example.myapplication.team.news;


import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;

import com.example.myapplication.R;
import com.example.myapplication.dto.News;
import com.example.myapplication.network.Network1;

import java.util.List;


/**
 * A simple {@link Fragment} subclass.
 */
public class NewsFragment extends Fragment {
    private Button btnNotice;
    private Button btnDetailNews;
    private List<News> list;
    private ListView newsListView;
    private NewsItemViewAdapter newsItemViewAdapter;
    private int newsFrgmentId;
    int tid=1;
    private boolean lastItem;
    private boolean firstItem;



    public void setTid(int tid) { this.tid=tid; }



    //스크롤에 필요한 필드
    boolean firstDragFlag = true;
    boolean dragFlag = false;   //현재 터치가 드래그 인지 확인
    float startYPosition = 0;       //터치이벤트의 시작점의 Y(세로)위치
    float endYPosition=0;
    boolean motionFlag = false;

    //TeamHomeFragment의 TeamImageView
    private ImageView teamHomeImageView;
    int teamHomeImageViewHeight=0;
    LinearLayout.LayoutParams invisibleParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,0);
    LinearLayout.LayoutParams visibleParams;


    public NewsFragment() {
        // Required empty public constructor
    }


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment

        newsFrgmentId = this.getId();

        View view = inflater.inflate(R.layout.fragment_news, container, false);

       /* //소식 추가
        btnAddNews = (Button)view.findViewById(R.id.btnAddNews);
        btnAddNews.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getActivity()
                        .getSupportFragmentManager()
                        .beginTransaction()
                        .replace(R.id.fragmentContainer, new AddNewsFragment())
                        .commit();
            }
        });*/

        //소식 상세
        /*btnDetailNews = (Button)view.findViewById(R.id.btnDetailNews);
        btnDetailNews.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getActivity()
                        .getSupportFragmentManager()
                        .beginTransaction()
                        .replace(R.id.fragmentContainer, new DetailNewsFragment())
                        .commit();
            }
        });*/


        //공지 상세
        btnNotice = (Button) view.findViewById(R.id.btnNotice);
        btnNotice.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getActivity()
                        .getSupportFragmentManager()
                        .beginTransaction()
                        .replace(R.id.fragmentContainer, new DetailNoticeFragment())
                        .commit();
            }
        });


        //소식 조회
        newsListView = (ListView)view.findViewById(R.id.newsListView);



        newsItemViewAdapter = new NewsItemViewAdapter(view.getContext());
        Network1.getNewsList(tid, getActivity(), newsItemViewAdapter);
        newsListView.setAdapter(newsItemViewAdapter);

        //소식 이벤트 처리
        newsListView.setOnItemClickListener(onNewsItemClickListener);


        //소식 추가
        FloatingActionButton fabAddNews = (FloatingActionButton) view.findViewById(R.id.fabAddNews);
        fabAddNews.setOnClickListener(onClickFab);


        /*//소식 리스트 처리
        newsListView.setOnScrollListener(new AbsListView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(AbsListView view, int scrollState) {
                //마지막 아이템이고 스크롤이 더이상 움직이지 않을 때 새로 리스트 갱신 처리
                if(lastItem && (scrollState == AbsListView.OnScrollListener.SCROLL_STATE_IDLE)){
                    //Network1.getNews(MainActivity.tid, getActivity().getSupportFragmentManager().findFragmentById(newsFrgmentId), newsItemViewAdapter);
                    newsListView.setAdapter(newsItemViewAdapter);
                }

                //
                //if(firstItem && (scrollState == AbsListView.OnScrollListener.))

            }

            @Override
            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
                //마지막 아이템인지 아닌지 체크
                if(totalItemCount>0 && (firstVisibleItem+visibleItemCount>=totalItemCount-1)) {
                    lastItem = true;
                }else {
                    lastItem = false;
                }

            }
        });*/



        //TeamHome의 ImageView 가져오기
        teamHomeImageView = (ImageView) getParentFragment().getView().findViewById(R.id.teamHomeImageView);
        //ImageView의 Height값을 측정하여 저장
        teamHomeImageViewHeight = teamHomeImageView.getMeasuredHeight();
        visibleParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,teamHomeImageViewHeight);

        //newsScrollView.getScrollY();

        newsListView.setOnTouchListener(new View.OnTouchListener() {

            @Override
            public boolean onTouch(View v, MotionEvent event) {

                switch (event.getAction()) {


                    case MotionEvent.ACTION_MOVE:       //터치를 한 후 움직이고 있으면
                        dragFlag = true;
                        if(firstDragFlag) {     //터치후 계속 드래그 하고 있다면 ACTION_MOVE가 계속 일어날 것임으로 무브를 시작한 첫번째 터치만 값을 저장함
                            Log.i("mylog", "firsttouch()");
                            startYPosition = event.getY(); //첫번째 터치의 Y(높이)를 저장
                            firstDragFlag= false;   //두번째 MOVE가 실행되지 못하도록 플래그 변경
                        }else {

                            if((startYPosition > event.getY()) && (startYPosition - event.getY()) >50) {
                                //TODO 스크롤 다운 시 작업
                                teamHomeImageView.setLayoutParams(invisibleParams);
                                Log.i("mylog", "up");
                            }else if((startYPosition < event.getY()) && (event.getY() - startYPosition) > 50) {
                                //TODO 스크롤 업 시 작업
                                teamHomeImageView.setLayoutParams(visibleParams);
                                Log.i("mylog", "down");
                            }
                        }

                        break;

                    case MotionEvent.ACTION_UP :
                        //endYPosition = event.getY();
                        Log.i("mylog", "lasttouch()");
                        firstDragFlag= true;
                        /*if(dragFlag) {  //드래그를 하다가 터치를 실행
                            // 시작Y가 끝 Y보다 크다면 터치가 아래서 위로 이루어졌다는 것이고, 스크롤은 아래로내려갔다는 뜻이다.
                            // (startYPosition - endYPosition) > 10 은 터치로 이동한 거리가 10픽셀 이상은 이동해야 스크롤 이동으로 감지하겠다는 뜻임으로 필요하지 않으면 제거해도 된다.
                            if((startYPosition > endYPosition) && (startYPosition - endYPosition) > 10) {
                                //TODO 스크롤 다운 시 작업
                                teamHomeImageView.setLayoutParams(invisibleParams);
                            }
                            //시작 Y가 끝 보다 작다면 터치가 위에서 아래로 이러우졌다는 것이고, 스크롤이 올라갔다는 뜻이다.
                            else if((startYPosition < endYPosition) && (endYPosition - startYPosition) > 10) {
                                //TODO 스크롤 업 시 작업
                                teamHomeImageView.setLayoutParams(visibleParams);
                            }
                        }*/

                        startYPosition = 0.0f;
                        endYPosition = 0.0f;
                        motionFlag = false;
                        break;

                }
                return false;
            }
        });


        return view;

    }

    private AdapterView.OnItemClickListener onNewsItemClickListener = new AdapterView.OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {

            News news = (News)parent.getItemAtPosition(position);
            //get news 네트워킹
            Network1.getNews(news.getNid(), getActivity());
        }
    };


    // 소식추가 버튼이벤트 처리
    private View.OnClickListener onClickFab = new View.OnClickListener() {
        @Override
        public void onClick(View view) {
            getActivity()
                    .getSupportFragmentManager()
                    .beginTransaction()
                    .replace(R.id.fragmentContainer, new AddNewsFragment())
                    .commit();
        }
    };

}
