package com.mycompany.myapp.controller.teammain;

import java.io.*;
import java.text.*;
import java.util.*;

import javax.servlet.http.*;

import org.json.*;
import org.springframework.beans.factory.annotation.*;
import org.springframework.stereotype.*;
import org.springframework.web.bind.annotation.*;

import com.mycompany.myapp.dto.*;
import com.mycompany.myapp.service.*;
import com.sun.media.jfxmedia.logging.*;

@Controller
public class NewsController {
	
	@Autowired
	private NewsService newsService;
	
	//소식 리스트 얻기
	@RequestMapping("/team/news/list")
	public void newsList(int tid, HttpServletResponse response) {
		List<News> list = newsService.getNewsListByTid(tid);
		String mimeType = "application/json";
		response.setContentType(mimeType);
		
		JSONObject root = new JSONObject();
		if((list==null)||(list.size()==0)) {
			root.put("newsResult", "fail");
		}else {
			root.put("newsResult", "success");
			JSONArray newsArray = new JSONArray();
			for(News news:list) {
				JSONObject newsJson = new JSONObject();
				newsJson.put("nid", news.getNid());
				newsJson.put("mid", news.getMid());
				newsJson.put("mprofile", news.getMprofile() != null?news.getMprofile():"");
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				newsJson.put("ndate", sdf.format(news.getNdate()));
				newsJson.put("ncontent", news.getNcontent());
				newsJson.put("nphotoname", news.getNphotoname() != null?news.getNphotoname():"");
				newsJson.put("ndataname", news.getNdataname());
				newsJson.put("nisnotice", news.getNisnotice());
				newsJson.put("tid", news.getTid());
				newsArray.put(newsJson);
			}
			root.put("list", newsArray);
		}
		
		// 출력 스트림 얻기
		OutputStream os;
		try {
			os = response.getOutputStream();
			String str = root.toString();
			os.write(str.getBytes());
			
			os.flush();

			os.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
	}
	
	
	
	@RequestMapping("/team/news/commentList")
	public void commentList(int nid, HttpServletResponse response) {
		List<Newscomment> commentlist = newsService.getCommentListByNid(nid);
		String mimeType = "application/json";
		response.setContentType(mimeType);
		
		JSONObject root = new JSONObject();
		if(commentlist==null) {
			root.put("commentResult", "fail");
		}else {
			root.put("commentResult", "success");
			JSONArray commentArray = new JSONArray();
			for(Newscomment comment:commentlist) {
				JSONObject commentJson = new JSONObject();
				commentJson.put("cid", comment.getCid());
				commentJson.put("ccontent", comment.getCcontent()!= null?comment.getCcontent():"");
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				commentJson.put("cdate", sdf.format(comment.getCdate()));
				commentJson.put("nid", comment.getNid());
				commentJson.put("mid", comment.getMid());				
				commentJson.put("mprofile", comment.getMprofile() != null?comment.getMprofile():"");
				commentArray.put(commentJson);
				//System.out.println(commentJson);
			}
			root.put("list", commentArray);
		}
		
		// 출력 스트림 얻기
		OutputStream os;
		try {
			os = response.getOutputStream();
			String str = root.toString();
			os.write(str.getBytes());
			
			os.flush();

			os.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
	@RequestMapping("/team/news/writeComment")
	public void writeComment(String mid, String ccontent ,int nid, HttpServletResponse response) {
		Newscomment newsComment = new Newscomment(ccontent, new Date(), nid, mid);
		
		int writeCommentResult = newsService.writeComment(newsComment);
		
		String mimeType = "application/json";
		response.setContentType(mimeType);
		
		JSONObject root = new JSONObject();
		if((writeCommentResult==0)) {
			root.put("writeCommentResult", "fail");
		}else {
			root.put("writeCommentResult", "success");
		}
		
		// 출력 스트림 얻기
		OutputStream os;
		try {
			os = response.getOutputStream();
			String str = root.toString();
			os.write(str.getBytes());
			
			os.flush();

			os.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	
	@RequestMapping("/team/news/deleteComment")
	public void deleteComment(int cid, HttpServletResponse response) {

		int deleteCommentResult = newsService.removeComment(cid);
		
		String mimeType = "application/json";
		response.setContentType(mimeType);
		
		JSONObject root = new JSONObject();
		if((deleteCommentResult==0)) {
			root.put("deleteCommentResult", "fail");
		}else {
			root.put("deleteCommentResult", "success");
		}
		
		// 출력 스트림 얻기
		OutputStream os;
		try {
			os = response.getOutputStream();
			String str = root.toString();
			os.write(str.getBytes());
			
			os.flush();

			os.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/team/news/deleteNews")
	public void deleteNews(int nid, HttpServletResponse response) {
		int deleteNewsResult = newsService.removeNews(nid);
		
		
		
	}


}
